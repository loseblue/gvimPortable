GTAGS(1)                                                              GTAGS(1)



[1mNAME[0m
       gtags - create tag files for global.

[1mSYNOPSIS[0m
       [1mgtags [22m[-ciIOqvw][-d [4mtag-file[24m][-f [4mfile[24m][[4mdbpath[24m]

[1mDESCRIPTION[0m
       [1mGtags [22mis used to create tag files for [1mglobal[22m(1).

       [1mGtags  [22mrecursively  collects  source files under the current directory,
       pickup symbols and write the cross-reference data into  the  tag  files
       ('GTAGS', 'GRTAGS' and 'GPATH').

       If 'gtags.files' exists or the [1m-f [22moption is specified, target files are
       limited by it. Lines starting with ". " are comments.

       C, yacc, Assembly, Java, C++ and PHP source files are supported.  Files
       whose  names end in '.c', '.h' are assumed to be C source files.  Files
       whose names end in '.y' are assumed to be  yacc  source  files.   Files
       whose  names end in '.s', '.S' are assumed to be Assembly source files.
       Files whose names end in '.java' are assumed to be Java  source  files.
       Files  whose names end in '.c++', '.cc', '.hh', '.cpp', '.cxx', '.hxx',
       '.hpp', '.C', '.H' are assumed to be C++  source  files.   Files  whose
       names  end  in  '.php',  '.php3', '.phtml' are assumed to be PHP source
       files.  Other files are assumed to be text files.

[1mOPTIONS[0m
       The following options are available:

       [1m--accept-dotfiles[0m
              Accept dot files and dot directories. By default,  [1mgtags  [22mignore
              them.

       [1m-c[22m, [1m--compact[0m
              Make  GTAGS  in  compact format.  This option does not influence
              GRTAGS, because they are always made in compact format.

       [1m--config[22m[=[4mname[24m]
              Print the value of config variable [4mname[24m.  If [4mname[24m is not  speci-
              fied then print all names and values.

       [1m-d[22m, [1m--dump [4m[22mtag-file[0m
              Dump  a  tag file. The output format is 'key<tab>data'.  This is
              for debugging.

       [1m-f[22m, [1m--file [4m[22mfile[0m
              Browse through all source files whose names are listed in  [4mfile[24m.
              The  argument  [4mfile[24m can  be set to '-' to accept a list of files
              from the standard input.  File names must be separated  by  new-
              line.

       [1m--gtagsconf [4m[22mfile[0m
              Set the [1mGTAGSCONF [22menvironment variable to [4mfile[24m.

       [1m--gtagslabel [4m[22mlabel[0m
              Set the [1mGTAGSLABEL [22menvironment variable to [4mlabel[24m.

       [1m-I[22m, [1m--idutils[0m
              Also make the ID database file for [1midutils[22m(1).

       [1m-i[22m, [1m--incremental[0m
              Update  tag  files  incrementally.  You had better use [1mglobal[22m(1)
              with the -u option.

       [1m-O[22m, [1m--objdir[0m
              Use BSD-style objdir as the location of tag files.  If '$MAKEOB-
              JDIRPREFIX'  directory  exists,  [1mgtags  [22mcreates '$MAKEOBJDIRPRE-
              FIX/<current directory>' directory and makes tag  files  in  it.
              If [4mdbpath[24m is specified, this option is ignored.

       [1m--single-update [4m[22mfile[0m
              Update  tag  files  for single file.  It is considered that [4mfile[0m
              was added or updated, and there is no  change  in  other  files.
              This option implies the -i option.

       [1m--statistics[0m
              Print statistics information.

       [1m-q[22m, [1m--quiet[0m
              Quiet mode.

       [1m-v[22m, [1m--verbose[0m
              Verbose mode.

       [1m-w[22m, [1m--warning[0m
              Print warning messages.

       [4mdbpath[24m The  directory in which tag files are generated.  The default is
              the current directory.

[1mEXAMPLES[0m
       $ ls -F
       Makefile      src/    lib/
       $ gtags -v
       $ global -x main
       main              10 src/main.c  main (argc, argv) {

[1mFILES[0m
       'GTAGS'
              Tag file for object definitions.

       'GRTAGS'
              Tag file for object references.

       'GPATH'
              Tag file for path names.

       '$HOME/.globalrc', '/etc/gtags.conf', '[sysconfdir]/gtags.conf'
              Configuration files.

       'gtags.files'
              The list of candidates of target files.

[1mENVIRONMENT[0m
       The following environment variables affect the execution of [1mgtags[22m:

       [1mTMPDIR [22mThe location used to stored  temporary  files.  The  default  is
              '/tmp'.

       [1mGTAGSCONF[0m
              Configuration file. The default is '$HOME/.globalrc'.

       [1mGTAGSLABEL[0m
              Configuration label. The default is [4mdefault[24m.

       [1mGTAGSCACHE[0m
              The size of B-tree cache. The default is 50000000 (bytes).

       [1mGTAGSFORCECPP[0m
              If  this  variable  is  set,  each  file  whose suffix is 'h' is
              treated as a C++ source file.

       [1mMAKEOBJDIRPREFIX[0m
              If this variable is set, '$MAKEOBJDIRPREFIX' is used as the pre-
              fix of BSD-style objdir. The default is '/usr/obj'.

[1mCONFIGURATION[0m
       The  following  configuration  variables affect the execution of [1mgtags[22m.
       You can see the default value  for  each  variable  with  the  [1m--config[0m
       option.

       icase_path(boolean)
              Ignore  case  distinctions  in  the  path.   Suffixes  check  is
              affected by this capability.

       langmap(comma separated list)
              Language mapping. Each comma-separated map consists of the  lan-
              guage  name,  a colon, and a list of file extensions.  As a spe-
              cial exception, [1mgtags  [22mcollects  values  from  multiple  langmap
              variables.              Default            mapping            is
              'c:.c.h,yacc:.y,asm:.s.S,java:.java,cpp:.c++.cc.hh.cpp.cxx.hxx.hpp.C.H,php:.php.php3.phtml'.

       gtags_parser(comma separated list)
              Specify  the mapping of language names and plugin parsers.  Each
              part delimited by the comma consists of  the  language  name,  a
              colon,  the  shared object path, an optional colon followed by a
              function name.  If the function name is not specified,  'parser'
              is  assumed.  As a special exception, [1mgtags [22mcollects values from
              multiple gtags_parser variables.

       skip(comma separated list)
              [1mGtags [22mskips files which are listed in this list.  As  a  special
              exception,  [1mgtags  [22mcollects values from multiple skip variables.
              If the value ends with '/', it is assumed  as  a  directory  and
              [1mgtags  [22mskips  all files under it.  If the value starts with '/',
              it is assumed a relative path from the root of source directory.

[1mDIAGNOSTICS[0m
       [1mGtags [22mexits with a non 0 value if an error occurred, 0 otherwise.

[1mSEE ALSO[0m
       [1mglobal[22m(1), [1mhtags[22m(1).

       GNU GLOBAL source code tag system
       (http://www.gnu.org/software/global/).

[1mBUG[0m
       'GTAGS' and 'GRTAGS' are very large.  In advance of using this command,
       check the space of your disk.

       Assembly  support  is  far from complete.  It extracts only ENTRY() and
       ALTENTRY() from source file.  Probably valid only for FreeBSD and Linux
       kernel source.

       There is no concurrency control about tag files.

[1mAUTHOR[0m
       Shigio YAMAGUCHI, Hideki IWAMOTO and others.

[1mHISTORY[0m
       The [1mgtags [22mcommand appeared in FreeBSD 2.2.2.



GNU Project                        May 2012                           GTAGS(1)
