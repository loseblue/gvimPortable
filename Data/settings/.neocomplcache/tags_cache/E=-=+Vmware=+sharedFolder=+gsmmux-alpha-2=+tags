[{'word': 'COMMAND_IS', 'kind': 'd', 'abbr': 'COMMAND_IS', 'dup': 1}, {'word': 'C_CLD', 'kind': 'd', 'abbr': 'C_CLD', 'dup': 1}, {'word': 'C_MSC', 'kind': 'd', 'abbr': 'C_MSC', 'dup': 1}, {'word': 'C_NSC', 'kind': 'd', 'abbr': 'C_NSC', 'dup': 1}, {'word': 'C_TEST', 'kind': 'd', 'abbr': 'C_TEST', 'dup': 1}, {'word': 'Channel_Status', 'kind': 's', 'abbr': 'typedef struct Channel_Status {', 'dup': 1}, {'word': 'Channel_Status::opened', 'menu': 'Channel_Status', 'kind': 'm', 'abbr': 'int opened;', 'dup': 1}, {'word': 'Channel_Status::v24_signals', 'menu': 'Channel_Status', 'kind': 'm', 'abbr': 'Channel_Status::v24_signals', 'dup': 1}, {'word': 'DISC', 'kind': 'd', 'abbr': 'DISC', 'dup': 1}, {'word': 'FRAME_IS', 'kind': 'd', 'abbr': 'FRAME_IS', 'dup': 1}, {'word': 'F_FLAG', 'kind': 'd', 'abbr': 'F_FLAG', 'dup': 1}, {'word': 'GSM0710_BUFFER_SIZE', 'kind': 'd', 'abbr': 'GSM0710_BUFFER_SIZE', 'dup': 1}, {'word': 'GSM0710_Buffer', 'kind': 's', 'abbr': 'GSM0710_Buffer', 'dup': 1}, {'word': 'GSM0710_Buffer::data', 'menu': 'GSM0710_Buffer', 'kind': 'm', 'abbr': 'GSM0710_Buffer::data', 'dup': 1}, {'word': 'GSM0710_Buffer::dropped_count', 'menu': 'GSM0710_Buffer', 'kind': 'm', 'abbr': 'unsigned long dropped_count;', 'dup': 1}, {'word': 'GSM0710_Buffer::endp', 'menu': 'GSM0710_Buffer', 'kind': 'm', 'abbr': 'unsigned char *endp;', 'dup': 1}, {'word': 'GSM0710_Buffer::flag_found', 'menu': 'GSM0710_Buffer', 'kind': 'm', 'abbr': 'int flag_found; // set if last character read was flag', 'dup': 1}, {'word': 'GSM0710_Buffer::readp', 'menu': 'GSM0710_Buffer', 'kind': 'm', 'abbr': 'unsigned char *readp;', 'dup': 1}, {'word': 'GSM0710_Buffer::received_count', 'menu': 'GSM0710_Buffer', 'kind': 'm', 'abbr': 'unsigned long received_count;', 'dup': 1}, {'word': 'GSM0710_Buffer::writep', 'menu': 'GSM0710_Buffer', 'kind': 'm', 'abbr': 'unsigned char *writep;', 'dup': 1}, {'word': 'GSM0710_Frame', 'kind': 's', 'abbr': 'GSM0710_Frame', 'dup': 1}, {'word': 'GSM0710_Frame::channel', 'menu': 'GSM0710_Frame', 'kind': 'm', 'abbr': 'unsigned char channel;', 'dup': 1}, {'word': 'GSM0710_Frame::control', 'menu': 'GSM0710_Frame', 'kind': 'm', 'abbr': 'unsigned char control;', 'dup': 1}, {'word': 'GSM0710_Frame::data', 'menu': 'GSM0710_Frame', 'kind': 'm', 'abbr': 'unsigned char *data;', 'dup': 1}, {'word': 'GSM0710_Frame::data_length', 'menu': 'GSM0710_Frame', 'kind': 'm', 'abbr': 'int data_length;', 'dup': 1}, {'word': 'INC_BUF_POINTER', 'kind': 'd', 'abbr': 'INC_BUF_POINTER', 'dup': 1}, {'word': 'PDEBUG', 'kind': 'd', 'abbr': 'PDEBUG', 'dup': 1}, {'word': 'PF_ISSET', 'kind': 'd', 'abbr': 'PF_ISSET', 'dup': 1}, {'word': 'SABM', 'kind': 'd', 'abbr': 'SABM', 'dup': 1}, {'word': 'S_DV', 'kind': 'd', 'abbr': 'S_DV', 'dup': 1}, {'word': 'S_FC', 'kind': 'd', 'abbr': 'S_FC', 'dup': 1}, {'word': 'S_IC', 'kind': 'd', 'abbr': 'S_IC', 'dup': 1}, {'word': 'S_RTC', 'kind': 'd', 'abbr': 'S_RTC', 'dup': 1}, {'word': 'S_RTR', 'kind': 'd', 'abbr': 'S_RTR', 'dup': 1}, {'word': '_GSM0710_BUFFER_H_', 'kind': 'd', 'abbr': '_GSM0710_BUFFER_H_', 'dup': 1}, {'word': '_GSM0710_H_', 'kind': 'd', 'abbr': '_GSM0710_H_', 'dup': 1}, {'word': '_modem_type', 'kind': 'v', 'abbr': 'int _modem_type;', 'dup': 1}, {'word': '_priority', 'kind': 'v', 'abbr': 'int _priority;', 'dup': 1}, {'word': 'at_command', 'kind': 'f', 'abbr': 'int at_command(int fd, char *cmd, int to)', 'dup': 1}, {'word': 'channel', 'menu': 'GSM0710_Frame', 'kind': 'm', 'abbr': 'unsigned char channel;', 'dup': 1}, {'word': 'closeDevices', 'kind': 'f', 'abbr': 'void closeDevices() ', 'dup': 1}, {'word': 'control', 'menu': 'GSM0710_Frame', 'kind': 'm', 'abbr': 'unsigned char control;', 'dup': 1}, {'word': 'createSymlinkName', 'kind': 'f', 'abbr': 'char *createSymlinkName(int idx) {', 'dup': 1}, {'word': 'daemonize', 'kind': 'f', 'abbr': 'int daemonize(int _debug)', 'dup': 1}, {'word': 'data', 'menu': 'GSM0710_Frame', 'kind': 'm', 'abbr': 'unsigned char *data;', 'dup': 1}, {'word': 'data_length', 'menu': 'GSM0710_Frame', 'kind': 'm', 'abbr': 'int data_length;', 'dup': 1}, {'word': 'destroy_frame', 'kind': 'f', 'abbr': 'destroy_frame', 'dup': 1}, {'word': 'dropped_count', 'menu': 'GSM0710_Buffer', 'kind': 'm', 'abbr': 'unsigned long dropped_count;', 'dup': 1}, {'word': 'endp', 'menu': 'GSM0710_Buffer', 'kind': 'm', 'abbr': 'unsigned char *endp;', 'dup': 1}, {'word': 'extract_frames', 'kind': 'f', 'abbr': 'extract_frames', 'dup': 1}, {'word': 'findInBuf', 'kind': 'f', 'abbr': 'int findInBuf(char* buf, int len, char* needle) {', 'dup': 1}, {'word': 'flag_found', 'menu': 'GSM0710_Buffer', 'kind': 'm', 'abbr': 'int flag_found; // set if last character read was flag', 'dup': 1}, {'word': 'gsm0710_buffer_destroy', 'kind': 'f', 'abbr': 'gsm0710_buffer_destroy', 'dup': 1}, {'word': 'gsm0710_buffer_free', 'kind': 'd', 'abbr': 'gsm0710_buffer_free', 'dup': 1}, {'word': 'gsm0710_buffer_get_frame', 'kind': 'f', 'abbr': 'gsm0710_buffer_get_frame', 'dup': 1}, {'word': 'gsm0710_buffer_init', 'kind': 'f', 'abbr': 'gsm0710_buffer_init', 'dup': 1}, {'word': 'gsm0710_buffer_length', 'kind': 'd', 'abbr': 'gsm0710_buffer_length', 'dup': 1}, {'word': 'gsm0710_buffer_write', 'kind': 'f', 'abbr': 'gsm0710_buffer_write', 'dup': 1}, {'word': 'handle_command', 'kind': 'f', 'abbr': 'handle_command', 'dup': 1}, {'word': 'indexOfBaud', 'kind': 'f', 'abbr': 'int indexOfBaud(int baudrate) {', 'dup': 1}, {'word': 'initGeneric', 'kind': 'f', 'abbr': 'int initGeneric()', 'dup': 1}, {'word': 'initSiemensMC35', 'kind': 'f', 'abbr': 'initSiemensMC35', 'dup': 1}, {'word': 'main', 'kind': 'f', 'abbr': 'int main(int argc, char *argv[], char *env[])', 'dup': 1}, {'word': 'make_fcs', 'kind': 'f', 'abbr': 'unsigned char make_fcs(const unsigned char *input, int count) {', 'dup': 1}, {'word': 'openDevicesAndMuxMode', 'kind': 'f', 'abbr': 'int openDevicesAndMuxMode() {', 'dup': 1}, {'word': 'open_pty', 'kind': 'f', 'abbr': 'int open_pty(char* devname, int idx) {', 'dup': 1}, {'word': 'open_serialport', 'kind': 'f', 'abbr': 'int open_serialport(char *dev)', 'dup': 1}, {'word': 'opened', 'menu': 'Channel_Status', 'kind': 'm', 'abbr': 'int opened;', 'dup': 1}, {'word': 'parent_signal_treatment', 'kind': 'f', 'abbr': 'void parent_signal_treatment(int param) {', 'dup': 1}, {'word': 'print_bits', 'kind': 'd', 'abbr': 'print_bits', 'dup': 1}, {'word': 'print_frame', 'kind': 'f', 'abbr': 'print_frame', 'dup': 1}, {'word': 'r_crctable', 'kind': 'v', 'abbr': 'r_crctable', 'dup': 1}, {'word': 'readp', 'menu': 'GSM0710_Buffer', 'kind': 'm', 'abbr': 'unsigned char *readp;', 'dup': 1}, {'word': 'received_count', 'menu': 'GSM0710_Buffer', 'kind': 'm', 'abbr': 'unsigned long received_count;', 'dup': 1}, {'word': 'setAdvancedOptions', 'kind': 'f', 'abbr': 'void setAdvancedOptions(int fd, speed_t baud) {', 'dup': 1}, {'word': 'signal_treatment', 'kind': 'f', 'abbr': 'void signal_treatment(int param)', 'dup': 1}, {'word': 'usage', 'kind': 'f', 'abbr': 'void usage(char *_name)', 'dup': 1}, {'word': 'ussp_connected', 'kind': 'f', 'abbr': 'int ussp_connected(int port)', 'dup': 1}, {'word': 'ussp_recv_data', 'kind': 'f', 'abbr': 'int ussp_recv_data(unsigned char *buf, int len, int port)', 'dup': 1}, {'word': 'ussp_send_data', 'kind': 'f', 'abbr': 'int ussp_send_data(unsigned char *buf, int n, int port)', 'dup': 1}, {'word': 'v24_signals', 'menu': 'Channel_Status', 'kind': 'm', 'abbr': 'v24_signals', 'dup': 1}, {'word': 'write_frame', 'kind': 'f', 'abbr': 'int write_frame(int channel, const char *input, int count, unsigned char type)', 'dup': 1}, {'word': 'writep', 'menu': 'GSM0710_Buffer', 'kind': 'm', 'abbr': 'unsigned char *writep;', 'dup': 1}]
